/* Improved breakpoints.js v1.1 | @ajlkn | MIT licensed */
var breakpoints = function () {
    "use strict";

    // Settings and variables
    var settings = {
        // List of breakpoints for various screen sizes
        list: {
            // Example breakpoints
            xlarge: [ '1281px', '1680px' ],
            large: [ '981px', '1280px' ],
            medium: [ '737px', '980px' ],
            small: [ '481px', '736px' ],
            xsmall: [ '361px', '480px' ],
            xxsmall: [ null, '360px' ],
            short: '(min-aspect-ratio: 16/7)',
            xshort: '(min-aspect-ratio: 16/6)'
        },
        media: {},
        events: [],
    };

    // Initialize breakpoints and event listeners
    function init() {
        window.addEventListener("resize", poll);
        window.addEventListener("orientationchange", poll);
        window.addEventListener("load", poll);
        window.addEventListener("fullscreenchange", poll);
    }

    // Check if the current viewport matches a given breakpoint
    function active(query) {
        var queryType, name, condition;
        if (!(query in settings.media)) {
            if (query.startsWith(">=")) {
                queryType = "gte";
                name = query.substr(2);
            } else if (query.startsWith("<=")) {
                queryType = "lte";
                name = query.substr(2);
            } else if (query.startsWith(">")) {
                queryType = "gt";
                name = query.substr(1);
            } else if (query.startsWith("<")) {
                queryType = "lt";
                name = query.substr(1);
            } else if (query.startsWith("!")) {
                queryType = "not";
                name = query.substr(1);
            } else {
                queryType = "eq";
                name = query;
            }

            // Process the breakpoint from the list
            if (name && name in settings.list) {
                condition = settings.list[name];
                var rangeStart = parseInt(condition[0]);
                var rangeEnd = parseInt(condition[1]);
                var unit = condition[0].substr(String(rangeStart).length);

                if (isNaN(rangeStart)) {
                    switch (queryType) {
                        case "gte":
                            condition = "screen";
                            break;
                        case "lte":
                            condition = "screen and (max-width: " + rangeEnd + unit + ")";
                            break;
                        case "gt":
                            condition = "screen and (min-width: " + (rangeEnd + 1) + unit + ")";
                            break;
                        case "lt":
                            condition = "screen and (max-width: -1px)";
                            break;
                        case "not":
                            condition = "screen and (min-width: " + (rangeEnd + 1) + unit + ")";
                            break;
                        default:
                            condition = "screen and (max-width: " + rangeEnd + unit + ")";
                    }
                } else {
                    switch (queryType) {
                        case "gte":
                            condition = "screen and (min-width: " + rangeStart + unit + ")";
                            break;
                        case "lte":
                            condition = "screen and (max-width: " + rangeEnd + unit + ")";
                            break;
                        case "gt":
                            condition = "screen and (min-width: " + (rangeEnd + 1) + unit + ")";
                            break;
                        case "lt":
                            condition = "screen and (max-width: " + (rangeStart - 1) + unit + ")";
                            break;
                        case "not":
                            condition = "screen and (max-width: " + (rangeStart - 1) + unit + "), screen and (min-width: " + (rangeEnd + 1) + unit + ")";
                            break;
                        default:
                            condition = "screen and (min-width: " + rangeStart + unit + ") and (max-width: " + rangeEnd + unit + ")";
                    }
                }
            } else {
                condition = "(" == condition[0] ? "screen and " + condition : condition;
            }

            settings.media[query] = !!condition && condition;
        }
        return settings.media[query] !== false && window.matchMedia(settings.media[query]).matches;
    }

    // Register events that will trigger based on the breakpoint conditions
    function on(query, handler) {
        settings.events.push({
            query: query,
            handler: handler,
            state: false
        });

        // Trigger handler immediately if the condition is active
        if (active(query)) {
            handler();
        }
    }

    // Poll function checks the current state of the breakpoints
    function poll() {
        settings.events.forEach(function (event) {
            if (active(event.query)) {
                if (!event.state) {
                    event.state = true;
                    event.handler();
                }
            } else {
                if (event.state) {
                    event.state = false;
                }
            }
        });
    }

    // Initialize breakpoints and poll the window size initially
    init();

    // Expose the API
    return {
        _: {
            init: init,
            active: active,
            on: on
        },
        on: on,
        active: active
    };

}();

// Initialize the breakpoints module
breakpoints.init();

// Example usage of the breakpoints system
breakpoints.on(">=768px", function () {
    console.log("The screen is at least 768px wide");
});

breakpoints.on("<480px", function () {
    console.log("The screen is smaller than 480px wide");
});

breakpoints.on("small", function () {
    console.log("The screen width is between 481px and 736px");
});
